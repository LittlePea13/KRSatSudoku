#!/usr/bin/env python

import argparse

from dp import dp
from parser import parse_rules, write_dimacs
import heuristics

if __name__ == "__main__":
    arg_parser = argparse.ArgumentParser()

    arg_parser.add_argument(
        "-S",
        "--heuristics",
        type=int,
        choices=list(range(12)),
        help="""Heuristic to run.
            S0: Davis-Putnam algorithm
            S1: DLCS
            S2: Jeroslow_wang
            S3: Row_wise_lenght
            S4: Column_wise_lenght
            S5: Block_wise_lenght
            S6: Row_wise_rand
            S7: Column_wise_rand
            S8: Block_wise_rand
            S9: Row_wise
            S10: Column_wise
            S11: Block_wise
            """,
    )

    arg_parser.add_argument(
        "input_file", type=str, help="SAT problem in DIMACS format"
    )

    arguments = arg_parser.parse_args()
    sat_input = arguments.input_file
    sat_output = sat_input + ".out"

    heurs = ['Random_split', 'DLCS', "Jeroslow_wang", \
        'Row_wise_lenght', 'Column_wise_lenght', 'Block_wise_lenght', \
        'Row_wise_rand', 'Column_wise_rand', 'Block_wise_rand', \
        'Row_wise', 'Column_wise', 'Block_wise']

    heuristics_func = getattr(heuristics, heurs[arguments.heuristics])

    print('Solve with:', heuristics_func.__name__)

    clauses, _, _ = parse_rules(sat_input)
    found_variables = {}
    sat, found_variables = dp(clauses, found_variables, heuristics_func) 

    if sat == True:
        print('Solved to {}'.format(sat_output))
        write_dimacs(found_variables, sat_output)
    else:
        print("No solution found")
        with open(sat_output, "w"):
            pass